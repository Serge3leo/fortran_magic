---
name: Anaconda/jupyter application

on:  # yamllint disable-line rule:truthy
  push:
    branches: ['*']

  pull_request:
    branches: ['*']

env:
  CACHE_NUMBER: 1  # increase to reset cache manually

jobs:
  build:

    strategy:
      matrix:
        os: ["macos", "ubuntu", "windows"]
        include:
          - os: macos
            label: osx-64
            prefix: /Users/runner/miniconda3/envs/my-env

          - os: ubuntu
            label: linux-64
            prefix: /usr/share/miniconda3/envs/my-env

          - os: windows
            label: win-64
            prefix: C:\Miniconda3\envs\my-env

    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: bash -el {0}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          activate-environment: my-env

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - uses: actions/cache@v2
        with:
          path: ${{ matrix.prefix }}
          key:
            ${{ matrix.label }}-conda-${{
            hashFiles('test/environment.yml') }}-${{
            env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update environment
        run: |
          sed -e "/#[[:space:]]*only:.*${{ matrix.label }}/p" \
              -e "/#[[:space:]]*only:/d" \
              test/environment.yml > environment.yml
          mamba env update -n my-env -f environment.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Lint with flake8 & ymllint
        run: |
          yamllint .
          flake8 . --count --max-line-length=127 --statistics

      - name: Check f2py
        run: |
          if [ ${{ matrix.os }} == windows ]; then
            # https://github.com/numpy/numpy/issues/16416
            # https://github.com/numpy/numpy/pull/20311/files
            python -m numpy.f2py \
                --fcompiler=gnu95 --compiler=mingw32 \
                -c test/fib1.f -m fib1
          else
            python -m numpy.f2py -c test/fib1.f -m fib1
          fi
          python -c \
            'import fib1, numpy as np; a=np.zeros(8,"d"); fib1.fib(a); print(a)'

      - name: Test with pytest
        run: |
          pytest --cov=fortranmagic --capture=fd
...
